#pragma once

#include "igstkPulseGenerator.h"
#include "vtkCellArray.h"
#include "vtkCubeSource.h"
#include "vtkDICOMImageReader.h"
#include "vtkFloatArray.h"
#include "vtkLight.h"
#include "vtkPNGReader.h"
#include "vtkPointData.h"
#include "vtkPolyDataMapper2D.h"
#include "vtkProperty2D.h"
#include "vtkSphereSource.h"
#include "vtkTexturedActor2D.h"
#include "vtkTimerLog.h"

#include "mis3DViewer.h"
#include "misImageCallback.h"
#include "misVolumeSlicer.h"
#include "misInteractorSTyleImageExtend.h"
#include "misNativeWindow.h"
#include "misNavigatorGuiderForAngle.h"
#include "misOrientationNavigationGuideObject.h"
#include "misVisualizationUtils.h"
#include "misWindow.h"

//=================================================================================

class misNavigatorActorTest
{
public:
	misNavigatorActorTest( );

	void LoadGui();	// Creates and displays the native window for the program instance
	
	// Is used as a callback function to that responds to pulses generated by the igstk::PulseGenerator object. With
	// help from the pulse generator, it renders the scene at regular intervals.
	void Render(); 
	void LoadExtensions( vtkRenderWindow *window );

private:
	// Simulates movement of the tracking tool by changing m_CurrentToolRotationAroundZ and setting it using 
	// SetOrientationFromRotationAngleZ, it then updates representation and tool actor.
	void SimulateToolOrientationChange();

	// Calculates the orientation normal vector using a given angle. The orientation will be on the XY plane with the angular
	// displacement specified. It then sets the calculated orientation on the navigation state.
	void SetToolOrientationByRotationAngleZ(double angleInDegrees);

	typedef misNavigatorActorTest Self;
	typedef itk::SimpleMemberCommand<Self> ObserverType;
	typedef itk::Point<float, 3> PointType;

	igstk::PulseGenerator::Pointer  m_PulseGenerator;	// Pulse generator to emit pulses to render the scene regularly.
	ObserverType::Pointer m_PusleObserver;	// Local observer that receives pulse events generated by m_PulseGenerator
	misWindow m_Window;	// Encloses the vtkRenderWindow, vtkRenderWindowInteractor, vtkRenderer and stuff like that.
	misNativeWindow m_MainNativeWindow;   // Native application window, created and displayed by LoadGui
	vtkSmartPointer<vtkTransform> m_transform;	// The transform used to simulate steady change of the tracker tool orientation.
	vtkSmartPointer<vtkActor> m_toolActor;	// The actor representing the tool within the scene
	std::shared_ptr<I3DViewer> m_Viewer;
	misOrientationNavigationGuideObject::Pointer m_OrientationNavigationObject;	// The object being tested
	misNavigationState::Pointer m_NavigationState;	// Navigation state used by navigation object, updated by simulation
	//vtkSmartPointer<misNavigatorGuiderForAngle> m_angleNavigatorGuideActor;
	
	// Keeps track of the current rotation of the tool orientation around the Z axis, used to simulate tool movement.
	double m_CurrentToolRotationAroundZ;	
};

